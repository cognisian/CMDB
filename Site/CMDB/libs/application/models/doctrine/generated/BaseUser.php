<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BaseUser extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('User');
        $this->hasColumn('id', 'integer', 4, array('type' => 'integer', 'unsigned' => '1', 'primary' => true, 'autoincrement' => true, 'length' => '4'));
        $this->hasColumn('logon', 'string', 16, array('type' => 'string', 'notnull' => true, 'length' => '16'));
        $this->hasColumn('fname', 'string', 30, array('type' => 'string', 'notnull' => true, 'length' => '30'));
        $this->hasColumn('lname', 'string', 30, array('type' => 'string', 'notnull' => true, 'length' => '30'));
        $this->hasColumn('password', 'string', 40, array('type' => 'string', 'fixed' => 1, 'notnull' => true, 'length' => '40'));
        $this->hasColumn('email', 'string', 60, array('type' => 'string', 'notnull' => true, 'length' => '60'));
        $this->hasColumn('is_admin', 'integer', 1, array('type' => 'integer', 'unsigned' => '1', 'notnull' => true, 'default' => 0, 'length' => '1'));
        $this->hasColumn('change_password', 'integer', 1, array('type' => 'integer', 'unsigned' => '1', 'notnull' => '1', 'default' => '1', 'length' => '1'));
        $this->hasColumn('logon_enabled', 'integer', 1, array('type' => 'integer', 'unsigned' => '1', 'default' => 0, 'length' => '1'));


        $this->index('User', array('fields' => array(0 => 'logon', 1 => 'logon_enabled', 2 => 'password', 3 => 'is_admin', 4 => 'change_password')));
    }

    public function setUp()
    {
        $this->hasMany('FunctionalArea', array('refClass' => 'UserFunctionalArea',
                                               'local' => 'user_id',
                                               'foreign' => 'functional_area_id'));

        $this->hasMany('Device as Owns', array('refClass' => 'DeviceOwner',
                                               'local' => 'owner_id',
                                               'foreign' => 'device_id'));

        $this->hasMany('UserFunctionalArea', array('local' => 'id',
                                                   'foreign' => 'user_id'));
    }
}
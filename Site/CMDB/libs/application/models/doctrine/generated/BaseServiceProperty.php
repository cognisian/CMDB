<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BaseServiceProperty extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('ServiceProperty');
        $this->hasColumn('id', 'integer', 4, array('type' => 'integer', 'unsigned' => '1', 'autoincrement' => true, 'primary' => true, 'length' => '4'));
        $this->hasColumn('service_id', 'integer', 4, array('type' => 'integer', 'unsigned' => '1', 'notnull' => true, 'length' => '4'));
        $this->hasColumn('device_id', 'integer', 4, array('type' => 'integer', 'unsigned' => '1', 'notnull' => true, 'length' => '4'));
        $this->hasColumn('functional_area_id', 'integer', 4, array('type' => 'integer', 'unsigned' => '1', 'length' => '4'));
    }

    public function setUp()
    {
        $this->hasOne('Device', array('local' => 'device_id',
                                      'foreign' => 'id'));

        $this->hasOne('Service', array('local' => 'service_id',
                                       'foreign' => 'id'));

        $this->hasOne('FunctionalArea', array('local' => 'functional_area_id',
                                              'foreign' => 'id'));

        $this->hasMany('ServiceProperty as DependsOn', array('refClass' => 'ServiceDependency',
                                                             'local' => 'from_service_prop_id',
                                                             'foreign' => 'to_service_prop_id'));

        $this->hasMany('ServiceComment as Comments', array('local' => 'id',
                                                           'foreign' => 'service_prop_id'));

        $this->hasMany('ServiceProperty as DependentOn', array('refClass' => 'ServiceDependency',
                                                               'local' => 'to_service_prop_id',
                                                               'foreign' => 'from_service_prop_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array('created' => array('name' => 'created', 'type' => 'timestamp', 'format' => 'Y-m-d H:i:s'), 'updated' => array('name' => 'updated', 'type' => 'timestamp', 'format' => 'Y-m-d H:i:s')));
        $this->actAs($timestampable0);
    }
}